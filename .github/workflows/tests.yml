name: Tests

on:
  - push
  - pull_request

jobs:
  tests:
    name: ${{ matrix.session }} CPython/${{ matrix.python }} ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.10", os: "ubuntu-latest", session: "lint" }
          - { python: "3.10", os: "ubuntu-latest", session: "docs-build" }

          - { python: "3.10", os: "ubuntu-latest", session: "mypy,tests,xdoctest" }
          - { python: "3.9", os: "ubuntu-latest", session: "mypy,tests,xdoctest" }
          - { python: "3.8", os: "ubuntu-latest", session: "mypy,tests,xdoctest" }
          - { python: "3.7", os: "ubuntu-latest", session: "mypy,tests,xdoctest" }

    runs-on: ${{ matrix.os }}

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"

    steps:
      - name: Check out source
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Upgrade pip in virtual environments
        shell: python
        run: |
          import os, pip
          
          with open(os.environ["GITHUB_ENV"], mode="a") as io:
              print(f"VIRTUALENV_PIP={pip.__version__}", file=io)

      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
          poetry --version

      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry
          nox --version

      - name: Run Nox session ${{ matrix.session }}
        run: nox --python=${{ matrix.python }}
